<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<context:component-scan base-package="com.yc" use-default-filters="false">
	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>
	<!--导入自己配置的beans.xml -->
	<import resource="classpath*:beans.xml" />

	<!-- 视图解析器 -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- default-servlet-handler 将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler, 
		它会对进入 DispatcherServlet 的请求进行筛查, 如果发现是没有经过映射的请求, 就将该请求交由 WEB 应用服务器默认的 Servlet 
		处理. 如果不是静态资源的请求，才由 DispatcherServlet 继续处理 一般 WEB 应用服务器默认的 Servlet 的名称都是 default. 
		若所使用的 WEB 服务器的默认 Servlet 名称不是 default，则需要通过 default-servlet-name 属性显式指定 -->
	<mvc:interceptors>
		<!--配置自定义的拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/front/login.do" />
			<mvc:exclude-mapping path="/article/*/findInit.do"/>
			<mvc:exclude-mapping path="/article/*/findArticleBypage.do"/>
			<mvc:exclude-mapping path="/article/findarticleByAid.do"/>
			<mvc:exclude-mapping path="/article/*/showmore.do"/>
			
			<mvc:exclude-mapping path="/article/findFirstArticleByTypeId.do"/>
			<bean class="com.yc.interceptor.LoginInterceptors" />
		</mvc:interceptor>
	</mvc:interceptors>

	 <bean id="utf8Charset" class="java.nio.charset.Charset" factory-method="forName">
			<constructor-arg value="UTF-8" />
		</bean> 
	<!-- 默认静态资源处理请求 --><!-- 添加注解驱动：里面默认注册了XMl的转换器还有JSON的转换器… -->
	<mvc:default-servlet-handler />

	<mvc:annotation-driven >
		<mvc:message-converters>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<constructor-arg ref="utf8Charset"/>
				</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 文件上传的配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="2000000" />
	</bean>
	
	

</beans>